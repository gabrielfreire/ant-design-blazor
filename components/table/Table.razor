@namespace AntDesign
@inherits AntDomComponentBase
@typeparam TItem

<div class="ant-table-wrapper">
    <Spin Spinning="Loading">
        @if (ShowPagination && PaginationPosition.Contains("top"))
        {
            <Pagination Class="@PaginationClass"
                        Total="Total"
                        PageSize="PageSize"
                        Current="PageIndex"
                        OnPageIndexChange="HandlePageIndexChange"
                        OnPageSizeChange="HandlePageSizeChange" />
        }

        <CascadingValue Value="@this" TValue="ITable">
            <div class="@ClassMapper.Class">
                <div class="ant-table-container">
                    @if (ScrollX != null || ScrollY != null)
                    {
                        <div class="ant-table-header" style="overflow: hidden;">
                            <table style="table-layout: fixed;">
                                @colGroup(this)
                                @header(this)
                            </table>
                        </div>
                        <div class="ant-table-body" style="overflow-y: scroll; max-height: @ScrollY;">
                            <table style="table-layout: fixed;">
                                @colGroup(this)
                                <tbody class="ant-table-tbody">
                                    <tr aria-hidden="true" class="ant-table-measure-row" style="height: 0px;">
                                        @for (var i = 0; i < ColumnContext.Columns.Count; i++)
                                        {
                                            <td style="padding: 0px; border: 0px; height: 0px;"></td>
                                        }
                                    </tr>
                                    @body(this)
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="ant-table-content">
                            <table style="table-layout: auto;">
                                @colGroup(this)
                                @header(this)
                                <tbody class="ant-table-tbody">
                                    @body(this)
                                </tbody>
                            </table>
                        </div>
                    }
                </div>
            </div>
        </CascadingValue>
        @if (ShowPagination && PaginationPosition.Contains("bottom"))
        {
            <Pagination Class="@PaginationClass"
                        Total="Total"
                        PageSize="PageSize"
                        Current="PageIndex"
                        OnPageIndexChange="HandlePageIndexChange"
                        OnPageSizeChange="HandlePageSizeChange" />
        }
    </Spin>
</div>

@code
{
    RenderFragment<Table<TItem>> header = table =>
    @<Template>
        <thead class="ant-table-thead">
            <tr>
                <CascadingValue Name="IsHeader" Value="true">
                    <CascadingValue Value="@table.ColumnContext">
                        @if (_fieldModel != null)
                        {
                            @table.ChildContent(_fieldModel)
                        }
                    </CascadingValue>
                </CascadingValue>
            </tr>
        </thead>
    </Template>;

RenderFragment<Table<TItem>> colGroup = table =>
@<Template>
    <CascadingValue Name="IsColGroup" Value="true">
        <colgroup>
            @if (_fieldModel != null)
            {
                @table.ChildContent(Table<TItem>._fieldModel)
            }
        </colgroup>
    </CascadingValue>
</Template>;

RenderFragment<Table<TItem>> body = table =>
@<Template>

    @if (table.ActualTotal <= 0)
    {
        <tr class="ant-table-placeholder">
            <td colspan="6" class="ant-table-cell">
                <Empty Simple />
            </td>
        </tr>
    }
    else if (table.ShowItems != null && table.ColumnContext.Columns.Count > 0)
    {
        for (int i = 0; i < table.ShowItems.Count(); i++)
        {
            var data = table.ShowItems.ElementAt(i);
            var @checked = table.HeaderSelection?.RowSelections.ElementAtOrDefault(i)?.Checked ?? false;
            <CascadingValue Value="@table.ColumnContext">
                <tr class="ant-table-row ant-table-row-level-0 @(@checked ? "ant-table-row-selected" : "")">
                    @table.ChildContent(data)
                </tr>
            </CascadingValue>
        }
    }
</Template>;
}
